class W {

	method super_from_a() { "W: " + super.type.name}
	
	method hello() {
		"Hello from W"
	}
	method super_string() { super.type.string }
}


class A : W {
	method self_as_string() {
		"A: " + self.string
	}
	
	method self_as_self() {
		self
	}
	
	method super_from_a() { "A: " + super.type.name + " -> " + super.super_from_a()}
	
	method hello_parent() {
		"Say hello to my parent " + super.type.name + " " + super.hello()
	}
}

class X : A {
	method self_as_string() {
		"X: " + super.self_as_string()
	}
	
	method super_from_a() { "X: " + super.type.name + " -> " + super.super_from_a() }
	
	method hello_parent() { "I " + self.type.name + " have a parent of " + super.type.name}
	
	method hello_to_all() { "Start with: " + self.hello_parent() + " End with: " + super.hello_parent() }
}

var d = X()
print(d.super_from_a())
print(d.hello_parent())
print(d.super_string())
log_debug()
print(d.hello_to_all())
