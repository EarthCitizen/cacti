class Something extends SomethingElse having Number, Object {

	hook new(a, b, c) {
		
	}
	
	hook add(self, other) {
		return self + other
	}
	
	hook call() {
		return Something(123)
	}
	
	hook subtract(self, other) {
	}
	
	hook left_shift(self, other) {
	}
	
	add(other) {
		return self[0] = other
	}
	
	subtract(other) {
		do_someting()
	}
	
	call(a, b, c) {
	}
	
	// Functions are the same as static methods
	function factory_function() {
	}
	
	method init(a, b, c) {
	
	}
	
	val FOO = 123
	var a
	var b
	var c
	
	property u(get, set)
	property a(r)
	
	private property x {
		set(value) {
			self._x = value * 3
		}
		
		get { return self._x}
	}
}

s = Something(a, b, c)
s.init -> <Method 'init'>
s.init(a, b, c)

